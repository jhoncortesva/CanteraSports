{"ast":null,"code":"var _jsxFileName = \"/home/jhon/Documentos/canteradise\\xF1o/Canteratercero (copia)/cantertercero/src/TarjetaDetalles.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TarjetaDetalles = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [tarjeta, setTarjeta] = useState(null);\n  const [nombre_acudiente, setNombreAcudiente] = useState('');\n  const [direccion, setDireccion] = useState('');\n  const [students, setStudents] = useState([]);\n  const [estudianteId, setEstudianteId] = useState('');\n  const [categoria, setCategoria] = useState('8-10');\n  const [celular, setCelular] = useState('');\n  const [cedula_acudiente, setCedulaAcudiente] = useState('');\n  const [estudiantes, setEstudiantes] = useState([]);\n  const [editId, setEditId] = useState[null];\n  const [message, setMessage] = useState('');\n\n  // Obtener los detalles de la tarjeta\n  useEffect(() => {\n    axios.get(`http://localhost:5000/tarjetas/${id}`).then(response => setTarjeta(response.data)).catch(error => console.error('Error al obtener detalles de la tarjeta:', error));\n  }, [id]);\n\n  // Obtener la lista de estudiantes\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        var _data$;\n        const response = await fetch('http://localhost:5000/students');\n        const data = await response.json();\n        setStudents(data);\n        setEstudianteId(((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.user_id) || '');\n      } catch (error) {\n        console.error('Error al estudiantes:', error);\n      }\n    };\n    const fetchEstudiantes = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/estudiantes');\n        const data = await response.json();\n        setEstudiantes(data);\n      } catch (error) {\n        console.error('Error al obtener estudiantes:', error);\n      }\n    };\n    fetchEntrenadores();\n    fetchEstudiantes();\n  }, []);\n\n  // Guardar estudiante\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const method = editId ? 'PUT' : 'POST';\n    const url = editId ? `http://localhost:5000/estudiantes/${editId}` : 'http://localhost:5000/estudiantes';\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          nombre_acudiente,\n          direccion,\n          estudiante: estudianteId,\n          edad,\n          celular,\n          cedula_acudiente\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        var _students$;\n        setMessage(editId ? 'Estudiante actualizado correctamente' : 'Estudiante creado correctamente');\n        setNombreAcudiente('');\n        setDireccion('');\n        setEdad('');\n        setCelular('');\n        setEdad('8-10');\n        setEstudianteId(((_students$ = students[0]) === null || _students$ === void 0 ? void 0 : _students$.user_id) || '');\n        setEditId(null);\n        const updatedTarjetas = await fetch('http://localhost:5000/estudiantes');\n        const updatedData = await updatedTarjetas.json();\n        setEstudiantes(updatedData);\n      } else {\n        setMessage(data.message);\n      }\n    } catch (error) {\n      setMessage(editId ? 'Error al actualizar el estudiante' : 'Error al crear el estudiante');\n    }\n  };\n\n  // Actualizar estudiante\n\n  // Eliminar estudiante\n\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/estudiantes/${id}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        setMessage('Tarjeta eliminada correctamente');\n        setTarjetas(tarjetas.filter(tarjeta => tarjeta.tarjeta_id !== id));\n      } else {\n        setMessage('Error al eliminar la tarjeta');\n      }\n    } catch (error) {\n      setMessage('Error al eliminar la tarjeta');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Detalles de la Tarjeta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), tarjeta && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: tarjeta.deporte\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: tarjeta.descripcion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Entrenador: \", tarjeta.entrenador]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Categor\\xEDa: \", tarjeta.categoria]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Ubicaci\\xF3n: \", tarjeta.ubicacion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Horario: \", tarjeta.horario]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(TarjetaDetalles, \"ImrE1ZXX+77kOQgX1vZYFZRE13Y=\", false, function () {\n  return [useParams];\n});\n_c = TarjetaDetalles;\nexport default TarjetaDetalles;\nvar _c;\n$RefreshReg$(_c, \"TarjetaDetalles\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","jsxDEV","_jsxDEV","TarjetaDetalles","_s","id","tarjeta","setTarjeta","nombre_acudiente","setNombreAcudiente","direccion","setDireccion","students","setStudents","estudianteId","setEstudianteId","categoria","setCategoria","celular","setCelular","cedula_acudiente","setCedulaAcudiente","estudiantes","setEstudiantes","editId","setEditId","message","setMessage","get","then","response","data","catch","error","console","fetchStudents","_data$","fetch","json","user_id","fetchEstudiantes","fetchEntrenadores","handleSubmit","e","preventDefault","method","url","headers","body","JSON","stringify","estudiante","edad","ok","_students$","setEdad","updatedTarjetas","updatedData","handleDelete","setTarjetas","tarjetas","filter","tarjeta_id","children","fileName","_jsxFileName","lineNumber","columnNumber","deporte","descripcion","entrenador","ubicacion","horario","_c","$RefreshReg$"],"sources":["/home/jhon/Documentos/canteradiseÃ±o/Canteratercero (copia)/cantertercero/src/TarjetaDetalles.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nconst TarjetaDetalles = () => {\n  const { id } = useParams();\n  const [tarjeta, setTarjeta] = useState(null);\n  const [nombre_acudiente, setNombreAcudiente] = useState('');\n  const [direccion, setDireccion] = useState('');\n  const [students, setStudents] = useState([]);\n  const [estudianteId, setEstudianteId] = useState('');\n  const [categoria, setCategoria] = useState('8-10');\n  const [celular, setCelular] = useState('');\n  const [cedula_acudiente, setCedulaAcudiente] = useState('');\n  const [estudiantes, setEstudiantes] = useState([]);\n  const [editId, setEditId] = useState[null];\n  const [message, setMessage] = useState('');\n \n\n  // Obtener los detalles de la tarjeta\n  useEffect(() => {\n    axios.get(`http://localhost:5000/tarjetas/${id}`)\n      .then(response => setTarjeta(response.data))\n      .catch(error => console.error('Error al obtener detalles de la tarjeta:', error));\n  }, [id]);\n\n  // Obtener la lista de estudiantes\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/students');\n        const data = await response.json();\n        setStudents(data);\n        setEstudianteId(data[0]?.user_id || '');\n      } catch (error) {\n        console.error('Error al estudiantes:', error);\n      }\n    };\n\n    const fetchEstudiantes = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/estudiantes');\n        const data = await response.json();\n        setEstudiantes(data);\n      } catch (error) {\n        console.error('Error al obtener estudiantes:', error);\n      }\n    };\n\n    fetchEntrenadores();\n    fetchEstudiantes();\n  }, []);\n\n\n\n \n\n  // Guardar estudiante\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const method = editId ? 'PUT' : 'POST';\n    const url = editId ? `http://localhost:5000/estudiantes/${editId}` : 'http://localhost:5000/estudiantes';\n\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          nombre_acudiente,\n          direccion,\n          estudiante: estudianteId,\n          edad,\n          celular,\n          cedula_acudiente,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setMessage(editId ? 'Estudiante actualizado correctamente' : 'Estudiante creado correctamente');\n        setNombreAcudiente('');\n        setDireccion('');\n        setEdad('');\n        setCelular('');\n        setEdad('8-10');\n        setEstudianteId(students[0]?.user_id || '');\n        setEditId(null);\n\n        const updatedTarjetas = await fetch('http://localhost:5000/estudiantes');\n        const updatedData = await updatedTarjetas.json();\n        setEstudiantes(updatedData);\n      } else {\n        setMessage(data.message);\n      }\n    } catch (error) {\n      setMessage(editId ? 'Error al actualizar el estudiante' : 'Error al crear el estudiante');\n    }\n  };\n\n  // Actualizar estudiante\n\n  // Eliminar estudiante\n\n  const handleDelete = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:5000/estudiantes/${id}`, {\n        method: 'DELETE',\n      });\n\n      if (response.ok) {\n        setMessage('Tarjeta eliminada correctamente');\n        setTarjetas(tarjetas.filter((tarjeta) => tarjeta.tarjeta_id !== id));\n      } else {\n        setMessage('Error al eliminar la tarjeta');\n      }\n    } catch (error) {\n      setMessage('Error al eliminar la tarjeta');\n    }\n  };\n\n\n  return (\n    <div>\n      <h1>Detalles de la Tarjeta</h1>\n      {tarjeta && (\n        <div>\n          <h2>{tarjeta.deporte}</h2>\n          <p>{tarjeta.descripcion}</p>\n          <p>Entrenador: {tarjeta.entrenador}</p>\n          <p>CategorÃ­a: {tarjeta.categoria}</p>\n          <p>UbicaciÃ³n: {tarjeta.ubicacion}</p>\n          <p>Horario: {tarjeta.horario}</p>\n        </div>\n      )}\n\n\n    </div>\n  );\n};\n\nexport default TarjetaDetalles;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,gBAAgB,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC3D,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,MAAM,CAAC;EAClD,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACsB,gBAAgB,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC3D,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC0B,MAAM,EAAEC,SAAS,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;;EAG1C;EACAD,SAAS,CAAC,MAAM;IACdE,KAAK,CAAC6B,GAAG,CAAC,kCAAkCvB,EAAE,EAAE,CAAC,CAC9CwB,IAAI,CAACC,QAAQ,IAAIvB,UAAU,CAACuB,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC3CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC,CAAC;EACrF,CAAC,EAAE,CAAC5B,EAAE,CAAC,CAAC;;EAER;EACAR,SAAS,CAAC,MAAM;IACd,MAAMsC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QAAA,IAAAC,MAAA;QACF,MAAMN,QAAQ,GAAG,MAAMO,KAAK,CAAC,gCAAgC,CAAC;QAC9D,MAAMN,IAAI,GAAG,MAAMD,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCzB,WAAW,CAACkB,IAAI,CAAC;QACjBhB,eAAe,CAAC,EAAAqB,MAAA,GAAAL,IAAI,CAAC,CAAC,CAAC,cAAAK,MAAA,uBAAPA,MAAA,CAASG,OAAO,KAAI,EAAE,CAAC;MACzC,CAAC,CAAC,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAED,MAAMO,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMV,QAAQ,GAAG,MAAMO,KAAK,CAAC,mCAAmC,CAAC;QACjE,MAAMN,IAAI,GAAG,MAAMD,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCf,cAAc,CAACQ,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDQ,iBAAiB,CAAC,CAAC;IACnBD,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;;EAMN;EACA,MAAME,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,MAAM,GAAGrB,MAAM,GAAG,KAAK,GAAG,MAAM;IACtC,MAAMsB,GAAG,GAAGtB,MAAM,GAAG,qCAAqCA,MAAM,EAAE,GAAG,mCAAmC;IAExG,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMO,KAAK,CAACS,GAAG,EAAE;QAChCD,MAAM;QACNE,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnB1C,gBAAgB;UAChBE,SAAS;UACTyC,UAAU,EAAErC,YAAY;UACxBsC,IAAI;UACJlC,OAAO;UACPE;QACF,CAAC;MACH,CAAC,CAAC;MAEF,MAAMW,IAAI,GAAG,MAAMD,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAIR,QAAQ,CAACuB,EAAE,EAAE;QAAA,IAAAC,UAAA;QACf3B,UAAU,CAACH,MAAM,GAAG,sCAAsC,GAAG,iCAAiC,CAAC;QAC/Ff,kBAAkB,CAAC,EAAE,CAAC;QACtBE,YAAY,CAAC,EAAE,CAAC;QAChB4C,OAAO,CAAC,EAAE,CAAC;QACXpC,UAAU,CAAC,EAAE,CAAC;QACdoC,OAAO,CAAC,MAAM,CAAC;QACfxC,eAAe,CAAC,EAAAuC,UAAA,GAAA1C,QAAQ,CAAC,CAAC,CAAC,cAAA0C,UAAA,uBAAXA,UAAA,CAAaf,OAAO,KAAI,EAAE,CAAC;QAC3Cd,SAAS,CAAC,IAAI,CAAC;QAEf,MAAM+B,eAAe,GAAG,MAAMnB,KAAK,CAAC,mCAAmC,CAAC;QACxE,MAAMoB,WAAW,GAAG,MAAMD,eAAe,CAAClB,IAAI,CAAC,CAAC;QAChDf,cAAc,CAACkC,WAAW,CAAC;MAC7B,CAAC,MAAM;QACL9B,UAAU,CAACI,IAAI,CAACL,OAAO,CAAC;MAC1B;IACF,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdN,UAAU,CAACH,MAAM,GAAG,mCAAmC,GAAG,8BAA8B,CAAC;IAC3F;EACF,CAAC;;EAED;;EAEA;;EAEA,MAAMkC,YAAY,GAAG,MAAOrD,EAAE,IAAK;IACjC,IAAI;MACF,MAAMyB,QAAQ,GAAG,MAAMO,KAAK,CAAC,qCAAqChC,EAAE,EAAE,EAAE;QACtEwC,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,IAAIf,QAAQ,CAACuB,EAAE,EAAE;QACf1B,UAAU,CAAC,iCAAiC,CAAC;QAC7CgC,WAAW,CAACC,QAAQ,CAACC,MAAM,CAAEvD,OAAO,IAAKA,OAAO,CAACwD,UAAU,KAAKzD,EAAE,CAAC,CAAC;MACtE,CAAC,MAAM;QACLsB,UAAU,CAAC,8BAA8B,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdN,UAAU,CAAC,8BAA8B,CAAC;IAC5C;EACF,CAAC;EAGD,oBACEzB,OAAA;IAAA6D,QAAA,gBACE7D,OAAA;MAAA6D,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9B7D,OAAO,iBACNJ,OAAA;MAAA6D,QAAA,gBACE7D,OAAA;QAAA6D,QAAA,EAAKzD,OAAO,CAAC8D;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1BjE,OAAA;QAAA6D,QAAA,EAAIzD,OAAO,CAAC+D;MAAW;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BjE,OAAA;QAAA6D,QAAA,GAAG,cAAY,EAACzD,OAAO,CAACgE,UAAU;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvCjE,OAAA;QAAA6D,QAAA,GAAG,gBAAW,EAACzD,OAAO,CAACU,SAAS;MAAA;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCjE,OAAA;QAAA6D,QAAA,GAAG,gBAAW,EAACzD,OAAO,CAACiE,SAAS;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCjE,OAAA;QAAA6D,QAAA,GAAG,WAAS,EAACzD,OAAO,CAACkE,OAAO;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGE,CAAC;AAEV,CAAC;AAAC/D,EAAA,CAvIID,eAAe;EAAA,QACJH,SAAS;AAAA;AAAAyE,EAAA,GADpBtE,eAAe;AAyIrB,eAAeA,eAAe;AAAC,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}