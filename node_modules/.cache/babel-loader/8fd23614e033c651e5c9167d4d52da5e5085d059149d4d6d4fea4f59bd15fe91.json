{"ast":null,"code":"var _jsxFileName = \"/home/jhon/Documentos/canteradise\\xF1o/Canteratercero (copia)/cantertercero/src/TarjetaDetalles.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TarjetaDetalles = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [tarjeta, setTarjeta] = useState(null);\n  const [nombre_acudiente, setNombreAcudiente] = useState('');\n  const [direccion, setDireccion] = useState('');\n  const [students, setStudents] = useState([]);\n  const [estudianteId, setEstudianteId] = useState('');\n  const [edad, setEdad] = useState('8-10');\n  const [celular, setCelular] = useState('');\n  const [cedula_acudiente, setCedulaAcudiente] = useState('');\n  const [estudiantes, setEstudiantes] = useState([]);\n  const [estado, setEstado] = useState(false);\n  const [editId, setEditId] = useState(null);\n  const [message, setMessage] = useState('');\n  const [image, setImage] = useState(null); // Nuevo estado para la imagen\n\n  // Manejar la selección de imagen\n  const handleImageChange = e => {\n    setImage(e.target.files[0]);\n  };\n\n  // Obtener los detalles de la tarjeta y los estudiantes\n  useEffect(() => {\n    axios.get(`http://localhost:5000/tarjetas/${id}`).then(response => setTarjeta(response.data)).catch(error => console.error('Error al obtener detalles de la tarjeta:', error));\n    const fetchStudents = async () => {\n      try {\n        var _data$;\n        const response = await fetch('http://localhost:5000/students');\n        const data = await response.json();\n        setStudents(data);\n        setEstudianteId(((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.user_id) || '');\n      } catch (error) {\n        console.error('Error al estudiantes:', error);\n      }\n    };\n    fetchStudents();\n  }, [id]);\n\n  // Guardar estudiante con imagen\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('nombre_acudiente', nombre_acudiente);\n    formData.append('direccion', direccion);\n    formData.append('estudiante', estudianteId);\n    formData.append('edad', edad);\n    formData.append('celular', celular);\n    formData.append('cedula_acudiente', cedula_acudiente);\n    formData.append('estado', estado);\n    if (image) {\n      formData.append('imagen', image); // Adjuntar imagen si existe\n    }\n    const method = editId ? 'PUT' : 'POST';\n    const url = editId ? `http://localhost:5000/estudiantes/${editId}` : 'http://localhost:5000/estudiantes';\n    try {\n      const response = await fetch(url, {\n        method,\n        body: formData // Enviar FormData en lugar de JSON\n      });\n      const data = await response.json();\n      if (response.ok) {\n        var _students$;\n        setMessage(editId ? 'Estudiante actualizado correctamente' : 'Estudiante creado correctamente');\n        setNombreAcudiente('');\n        setDireccion('');\n        setCelular('');\n        setCedulaAcudiente('');\n        setEdad('8-10');\n        setEstudianteId(((_students$ = students[0]) === null || _students$ === void 0 ? void 0 : _students$.user_id) || '');\n        setImage(null); // Limpiar imagen\n        setEditId(null);\n        const updatedEstudiantes = await fetch('http://localhost:5000/estudiantes');\n        const updatedData = await updatedEstudiantes.json();\n        setEstudiantes(updatedData);\n      } else {\n        setMessage(data.message);\n      }\n    } catch (error) {\n      setMessage('Error al guardar el estudiante');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: editId ? 'Actualizar Estudiante' : 'Crear Estudiante'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editId ? 'Actualizar' : 'Crear'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(TarjetaDetalles, \"Xg8yJ+w4hDhNQQ1S3O5Qm393Smg=\", false, function () {\n  return [useParams];\n});\n_c = TarjetaDetalles;\nexport default TarjetaDetalles;\nvar _c;\n$RefreshReg$(_c, \"TarjetaDetalles\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","useParams","jsxDEV","_jsxDEV","TarjetaDetalles","_s","id","tarjeta","setTarjeta","nombre_acudiente","setNombreAcudiente","direccion","setDireccion","students","setStudents","estudianteId","setEstudianteId","edad","setEdad","celular","setCelular","cedula_acudiente","setCedulaAcudiente","estudiantes","setEstudiantes","estado","setEstado","editId","setEditId","message","setMessage","image","setImage","handleImageChange","e","target","files","get","then","response","data","catch","error","console","fetchStudents","_data$","fetch","json","user_id","handleSubmit","preventDefault","formData","FormData","append","method","url","body","ok","_students$","updatedEstudiantes","updatedData","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","_c","$RefreshReg$"],"sources":["/home/jhon/Documentos/canteradiseño/Canteratercero (copia)/cantertercero/src/TarjetaDetalles.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useParams } from 'react-router-dom';\n\nconst TarjetaDetalles = () => {\n  const { id } = useParams();\n  const [tarjeta, setTarjeta] = useState(null);\n  const [nombre_acudiente, setNombreAcudiente] = useState('');\n  const [direccion, setDireccion] = useState('');\n  const [students, setStudents] = useState([]);\n  const [estudianteId, setEstudianteId] = useState('');\n  const [edad, setEdad] = useState('8-10');\n  const [celular, setCelular] = useState('');\n  const [cedula_acudiente, setCedulaAcudiente] = useState('');\n  const [estudiantes, setEstudiantes] = useState([]);\n  const [estado, setEstado] = useState(false);\n  const [editId, setEditId] = useState(null);\n  const [message, setMessage] = useState('');\n  const [image, setImage] = useState(null);  // Nuevo estado para la imagen\n\n  // Manejar la selección de imagen\n  const handleImageChange = (e) => {\n    setImage(e.target.files[0]);\n  };\n\n  // Obtener los detalles de la tarjeta y los estudiantes\n  useEffect(() => {\n    axios.get(`http://localhost:5000/tarjetas/${id}`)\n      .then(response => setTarjeta(response.data))\n      .catch(error => console.error('Error al obtener detalles de la tarjeta:', error));\n\n    const fetchStudents = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/students');\n        const data = await response.json();\n        setStudents(data);\n        setEstudianteId(data[0]?.user_id || '');\n      } catch (error) {\n        console.error('Error al estudiantes:', error);\n      }\n    };\n    fetchStudents();\n  }, [id]);\n\n  // Guardar estudiante con imagen\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('nombre_acudiente', nombre_acudiente);\n    formData.append('direccion', direccion);\n    formData.append('estudiante', estudianteId);\n    formData.append('edad', edad);\n    formData.append('celular', celular);\n    formData.append('cedula_acudiente', cedula_acudiente);\n    formData.append('estado', estado);\n    if (image) {\n      formData.append('imagen', image);  // Adjuntar imagen si existe\n    }\n\n    const method = editId ? 'PUT' : 'POST';\n    const url = editId ? `http://localhost:5000/estudiantes/${editId}` : 'http://localhost:5000/estudiantes';\n  \n    try {\n      const response = await fetch(url, {\n        method,\n        body: formData,  // Enviar FormData en lugar de JSON\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setMessage(editId ? 'Estudiante actualizado correctamente' : 'Estudiante creado correctamente');\n        setNombreAcudiente('');\n        setDireccion('');\n        setCelular('');\n        setCedulaAcudiente('');\n        setEdad('8-10');\n        setEstudianteId(students[0]?.user_id || '');\n        setImage(null);  // Limpiar imagen\n        setEditId(null);\n\n        const updatedEstudiantes = await fetch('http://localhost:5000/estudiantes');\n        const updatedData = await updatedEstudiantes.json();\n        setEstudiantes(updatedData);\n      } else {\n        setMessage(data.message);\n      }\n    } catch (error) {\n      setMessage('Error al guardar el estudiante');\n    }\n  };\n\n  return (\n    <div>\n      <h1>{editId ? 'Actualizar Estudiante' : 'Crear Estudiante'}</h1>\n      <form onSubmit={handleSubmit}>\n        {/* Otros campos... */}\n        \n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={handleImageChange}\n        />\n\n        <button type=\"submit\">{editId ? 'Actualizar' : 'Crear'}</button>\n      </form>\n    </div>\n  );\n};\n\nexport default TarjetaDetalles;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}